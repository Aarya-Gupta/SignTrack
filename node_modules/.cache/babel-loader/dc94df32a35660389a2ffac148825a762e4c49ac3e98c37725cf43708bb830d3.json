{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\abdullah\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Button, CircularProgress, Paper, LinearProgress } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport { styled } from '@mui/material/styles';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  marginTop: theme.spacing(4),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)'\n}));\n_c = UploadContainer;\nconst VideoContainer = styled(Paper)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  padding: theme.spacing(2),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  width: '100%',\n  maxWidth: '1600px',\n  margin: '32px auto',\n  '& video': {\n    width: '100%',\n    maxHeight: '70vh',\n    objectFit: 'contain'\n  }\n}));\n_c2 = VideoContainer;\nconst ProcessingText = styled(Typography)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  color: theme.palette.text.secondary\n}));\n_c3 = ProcessingText;\nconst Account = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [resultVideo, setResultVideo] = useState(null);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    let progressInterval;\n    if (processing && progress < 100) {\n      progressInterval = setInterval(() => {\n        setProgress(currentProgress => {\n          // Generate random increment between 1 and 20\n          const randomIncrement = Math.floor(Math.random() * 20) + 1;\n          // Calculate new progress\n          const newProgress = Math.min(currentProgress + randomIncrement, 99);\n          // If we're close to 10 seconds (based on interval), allow reaching 100\n          if (currentProgress >= 95) {\n            return 100;\n          }\n          return newProgress;\n        });\n      }, 1000); // Update every second\n\n      // Force completion at exactly 10 seconds\n      const finalTimer = setTimeout(() => {\n        setProgress(100);\n        setResultVideo('/result_out.mp4');\n        setProcessing(false);\n      }, 10000);\n      return () => {\n        clearInterval(progressInterval);\n        clearTimeout(finalTimer);\n      };\n    }\n  }, [processing]);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setUploading(true);\n    setProgress(0);\n    try {\n      // Create form data\n      const formData = new FormData();\n      formData.append('video', file);\n\n      // Send to backend\n      const response = await fetch('http://localhost:5000/api/process-video', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process video');\n      }\n\n      // Get the processed video blob\n      const videoBlob = await response.blob();\n\n      // Create a URL for the processed video\n      const videoUrl = URL.createObjectURL(videoBlob);\n\n      // Trigger automatic download\n      const downloadUrl = window.URL.createObjectURL(videoBlob);\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = 'processed_video.mp4';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(downloadUrl);\n      setResultVideo(videoUrl);\n      setProcessing(false);\n      setProgress(100);\n    } catch (error) {\n      console.error('Error processing video:', error);\n      setUploading(false);\n      setProcessing(false);\n    } finally {\n      event.target.value = '';\n    }\n  };\n  const handleDownload = async () => {\n    if (!(resultVideo !== null && resultVideo !== void 0 && resultVideo.id)) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/download-video/${resultVideo.id}`);\n      if (!response.ok) {\n        throw new Error('Failed to download video');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'processed_video.mp4';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Error downloading video:', error);\n    }\n  };\n  const getStatusText = () => {\n    if (uploading) return \"Uploading video...\";\n    if (processing) {\n      if (progress < 30) return \"Initializing processing...\";\n      if (progress < 60) return \"Processing video...\";\n      if (progress < 90) return \"Analyzing results...\";\n      return \"Finalizing...\";\n    }\n    return \"Upload Video\";\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        flex: 1,\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          textAlign: \"center\",\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadContainer, {\n          elevation: 3,\n          sx: {\n            maxWidth: '800px',\n            mx: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Upload Video for Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4\",\n            onChange: handleFileUpload,\n            style: {\n              display: 'none'\n            },\n            id: \"video-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"video-upload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: \"span\",\n              variant: \"contained\",\n              size: \"large\",\n              disabled: uploading || processing,\n              startIcon: uploading || processing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 56\n              }, this) : /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 89\n              }, this),\n              sx: {\n                mt: 2\n              },\n              children: getStatusText()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), (uploading || processing) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: processing ? progress : 0,\n              sx: {\n                height: 8,\n                borderRadius: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProcessingText, {\n              variant: \"body2\",\n              children: processing ? `Progress: ${progress}%` : 'Uploading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), resultVideo && /*#__PURE__*/_jsxDEV(VideoContainer, {\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              textAlign: 'center'\n            },\n            children: \"Processed Video Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              src: resultVideo,\n              style: {\n                borderRadius: '8px',\n                boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n              },\n              children: \"Your browser does not support the video tag.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Account, \"dPxoV1lhAWzrUd+Mzh8PLzclt9s=\");\n_c4 = Account;\nexport default Account;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"ProcessingText\");\n$RefreshReg$(_c4, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Button","CircularProgress","Paper","LinearProgress","CloudUploadIcon","CloudDownloadIcon","styled","Footer","jsxDEV","_jsxDEV","UploadContainer","theme","padding","spacing","textAlign","marginTop","backgroundColor","_c","VideoContainer","width","maxWidth","margin","maxHeight","objectFit","_c2","ProcessingText","color","palette","text","secondary","_c3","Account","_s","uploading","setUploading","processing","setProcessing","resultVideo","setResultVideo","progress","setProgress","progressInterval","setInterval","currentProgress","randomIncrement","Math","floor","random","newProgress","min","finalTimer","setTimeout","clearInterval","clearTimeout","handleFileUpload","event","_event$target$files","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","videoBlob","blob","videoUrl","URL","createObjectURL","downloadUrl","window","a","document","createElement","href","download","appendChild","click","revokeObjectURL","error","console","value","handleDownload","id","url","removeChild","getStatusText","sx","display","flexDirection","minHeight","children","flex","py","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","mx","type","accept","onChange","style","htmlFor","size","disabled","startIcon","mt","height","borderRadius","alignItems","overflow","controls","src","boxShadow","_c4","$RefreshReg$"],"sources":["C:/code/abdullah/src/pages/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\nimport { styled } from '@mui/material/styles';\r\nimport Footer from '../components/Footer';\r\n\r\nconst UploadContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  marginTop: theme.spacing(4),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n}));\r\n\r\nconst VideoContainer = styled(Paper)(({ theme }) => ({\r\n  marginTop: theme.spacing(4),\r\n  padding: theme.spacing(2),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n  width: '100%',\r\n  maxWidth: '1600px',\r\n  margin: '32px auto',\r\n  '& video': {\r\n    width: '100%',\r\n    maxHeight: '70vh',\r\n    objectFit: 'contain',\r\n  }\r\n}));\r\n\r\nconst ProcessingText = styled(Typography)(({ theme }) => ({\r\n  marginTop: theme.spacing(2),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Account = () => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [resultVideo, setResultVideo] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let progressInterval;\r\n    if (processing && progress < 100) {\r\n      progressInterval = setInterval(() => {\r\n        setProgress(currentProgress => {\r\n          // Generate random increment between 1 and 20\r\n          const randomIncrement = Math.floor(Math.random() * 20) + 1;\r\n          // Calculate new progress\r\n          const newProgress = Math.min(currentProgress + randomIncrement, 99);\r\n          // If we're close to 10 seconds (based on interval), allow reaching 100\r\n          if (currentProgress >= 95) {\r\n            return 100;\r\n          }\r\n          return newProgress;\r\n        });\r\n      }, 1000); // Update every second\r\n\r\n      // Force completion at exactly 10 seconds\r\n      const finalTimer = setTimeout(() => {\r\n        setProgress(100);\r\n        setResultVideo('/result_out.mp4');\r\n        setProcessing(false);\r\n      }, 10000);\r\n\r\n      return () => {\r\n        clearInterval(progressInterval);\r\n        clearTimeout(finalTimer);\r\n      };\r\n    }\r\n  }, [processing]);\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    setProgress(0);\r\n    \r\n    try {\r\n      // Create form data\r\n      const formData = new FormData();\r\n      formData.append('video', file);\r\n\r\n      // Send to backend\r\n      const response = await fetch('http://localhost:5000/api/process-video', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process video');\r\n      }\r\n\r\n      // Get the processed video blob\r\n      const videoBlob = await response.blob();\r\n      \r\n      // Create a URL for the processed video\r\n      const videoUrl = URL.createObjectURL(videoBlob);\r\n      \r\n      // Trigger automatic download\r\n      const downloadUrl = window.URL.createObjectURL(videoBlob);\r\n      const a = document.createElement('a');\r\n      a.href = downloadUrl;\r\n      a.download = 'processed_video.mp4';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(downloadUrl);\r\n      \r\n      setResultVideo(videoUrl);\r\n      setProcessing(false);\r\n      setProgress(100);\r\n      \r\n    } catch (error) {\r\n      console.error('Error processing video:', error);\r\n      setUploading(false);\r\n      setProcessing(false);\r\n    } finally {\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!resultVideo?.id) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/download-video/${resultVideo.id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to download video');\r\n      }\r\n      \r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'processed_video.mp4';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error downloading video:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (uploading) return \"Uploading video...\";\r\n    if (processing) {\r\n      if (progress < 30) return \"Initializing processing...\";\r\n      if (progress < 60) return \"Processing video...\";\r\n      if (progress < 90) return \"Analyzing results...\";\r\n      return \"Finalizing...\";\r\n    }\r\n    return \"Upload Video\";\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    }}>\r\n      <Container maxWidth=\"lg\" sx={{ flex: 1, py: 4 }}>\r\n        <Box sx={{ py: 8 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom textAlign=\"center\">\r\n            My Account\r\n          </Typography>\r\n\r\n          <UploadContainer elevation={3} sx={{ maxWidth: '800px', mx: 'auto' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Upload Video for Processing\r\n            </Typography>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"video/mp4\"\r\n              onChange={handleFileUpload}\r\n              style={{ display: 'none' }}\r\n              id=\"video-upload\"\r\n            />\r\n            <label htmlFor=\"video-upload\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                disabled={uploading || processing}\r\n                startIcon={(uploading || processing) ? <CircularProgress size={20} /> : <CloudUploadIcon />}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {getStatusText()}\r\n              </Button>\r\n            </label>\r\n            \r\n            {(uploading || processing) && (\r\n              <Box sx={{ width: '100%', mt: 3 }}>\r\n                <LinearProgress \r\n                  variant=\"determinate\" \r\n                  value={processing ? progress : 0} \r\n                  sx={{ height: 8, borderRadius: 4 }}\r\n                />\r\n                <ProcessingText variant=\"body2\">\r\n                  {processing ? `Progress: ${progress}%` : 'Uploading...'}\r\n                </ProcessingText>\r\n              </Box>\r\n            )}\r\n          </UploadContainer>\r\n\r\n          {resultVideo && (\r\n            <VideoContainer elevation={3}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ textAlign: 'center' }}>\r\n                Processed Video Result\r\n              </Typography>\r\n              <Box sx={{ \r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                overflow: 'hidden'\r\n              }}>\r\n                <video\r\n                  controls\r\n                  src={resultVideo}\r\n                  style={{ \r\n                    borderRadius: '8px',\r\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </Box>\r\n            </VideoContainer>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n      <Footer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Account; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}