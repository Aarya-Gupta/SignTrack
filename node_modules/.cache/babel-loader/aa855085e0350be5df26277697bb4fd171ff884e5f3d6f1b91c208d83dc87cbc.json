{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\abdullah\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Typography, Button, CircularProgress, Paper, LinearProgress } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  marginTop: theme.spacing(4),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)'\n}));\n_c = UploadContainer;\nconst VideoContainer = styled(Paper)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  padding: theme.spacing(2),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)'\n}));\n_c2 = VideoContainer;\nconst ProcessingText = styled(Typography)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  color: theme.palette.text.secondary\n}));\n_c3 = ProcessingText;\nconst Account = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [resultVideo, setResultVideo] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setUploading(true);\n    setProgress(0);\n    try {\n      // First show uploading state\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setUploading(false);\n\n      // Then show processing state with progress\n      setProcessing(true);\n\n      // Simulate 5-second processing with progress updates\n      for (let i = 0; i <= 100; i += 20) {\n        setProgress(i);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      // Set the result video\n      setResultVideo('/result_out.mp4');\n    } catch (error) {\n      console.error('Error processing video:', error);\n    } finally {\n      setUploading(false);\n      setProcessing(false);\n      event.target.value = '';\n    }\n  };\n  const getStatusText = () => {\n    if (uploading) return \"Uploading video...\";\n    if (processing) {\n      if (progress < 30) return \"Initializing processing...\";\n      if (progress < 60) return \"Processing video...\";\n      return \"Finalizing results...\";\n    }\n    return \"Upload Video\";\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UploadContainer, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"Upload Video for Processing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/mp4\",\n          onChange: handleFileUpload,\n          style: {\n            display: 'none'\n          },\n          id: \"video-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"video-upload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: \"span\",\n            variant: \"contained\",\n            size: \"large\",\n            disabled: uploading || processing,\n            startIcon: uploading || processing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 87\n            }, this),\n            sx: {\n              mt: 2\n            },\n            children: getStatusText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), (uploading || processing) && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: processing ? progress : 0,\n            sx: {\n              height: 8,\n              borderRadius: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProcessingText, {\n            variant: \"body2\",\n            children: processing ? `Progress: ${progress}%` : 'Uploading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), resultVideo && /*#__PURE__*/_jsxDEV(VideoContainer, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Processed Video Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          width: \"100%\",\n          src: resultVideo,\n          style: {\n            borderRadius: '8px'\n          },\n          children: \"Your browser does not support the video tag.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Account, \"j+qNTukGz3/DEUhwJ44VyxKMkSU=\");\n_c4 = Account;\nexport default Account;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"ProcessingText\");\n$RefreshReg$(_c4, \"Account\");","map":{"version":3,"names":["React","useState","Box","Container","Typography","Button","CircularProgress","Paper","LinearProgress","CloudUploadIcon","styled","jsxDEV","_jsxDEV","UploadContainer","theme","padding","spacing","textAlign","marginTop","backgroundColor","_c","VideoContainer","_c2","ProcessingText","color","palette","text","secondary","_c3","Account","_s","uploading","setUploading","processing","setProcessing","resultVideo","setResultVideo","progress","setProgress","handleFileUpload","event","_event$target$files","file","target","files","Promise","resolve","setTimeout","i","error","console","value","getStatusText","maxWidth","children","sx","py","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","type","accept","onChange","style","display","id","htmlFor","size","disabled","startIcon","mt","width","height","borderRadius","controls","src","_c4","$RefreshReg$"],"sources":["C:/code/abdullah/src/pages/Account.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst UploadContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  marginTop: theme.spacing(4),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n}));\r\n\r\nconst VideoContainer = styled(Paper)(({ theme }) => ({\r\n  marginTop: theme.spacing(4),\r\n  padding: theme.spacing(2),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n}));\r\n\r\nconst ProcessingText = styled(Typography)(({ theme }) => ({\r\n  marginTop: theme.spacing(2),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Account = () => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [resultVideo, setResultVideo] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    setProgress(0);\r\n    \r\n    try {\r\n      // First show uploading state\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      setUploading(false);\r\n      \r\n      // Then show processing state with progress\r\n      setProcessing(true);\r\n      \r\n      // Simulate 5-second processing with progress updates\r\n      for (let i = 0; i <= 100; i += 20) {\r\n        setProgress(i);\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n      }\r\n      \r\n      // Set the result video\r\n      setResultVideo('/result_out.mp4');\r\n    } catch (error) {\r\n      console.error('Error processing video:', error);\r\n    } finally {\r\n      setUploading(false);\r\n      setProcessing(false);\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (uploading) return \"Uploading video...\";\r\n    if (processing) {\r\n      if (progress < 30) return \"Initializing processing...\";\r\n      if (progress < 60) return \"Processing video...\";\r\n      return \"Finalizing results...\";\r\n    }\r\n    return \"Upload Video\";\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ py: 8 }}>\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom textAlign=\"center\">\r\n          My Account\r\n        </Typography>\r\n\r\n        <UploadContainer elevation={3}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Upload Video for Processing\r\n          </Typography>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"video/mp4\"\r\n            onChange={handleFileUpload}\r\n            style={{ display: 'none' }}\r\n            id=\"video-upload\"\r\n          />\r\n          <label htmlFor=\"video-upload\">\r\n            <Button\r\n              component=\"span\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              disabled={uploading || processing}\r\n              startIcon={(uploading || processing) ? <CircularProgress size={20} /> : <CloudUploadIcon />}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {getStatusText()}\r\n            </Button>\r\n          </label>\r\n          \r\n          {(uploading || processing) && (\r\n            <Box sx={{ width: '100%', mt: 3 }}>\r\n              <LinearProgress \r\n                variant=\"determinate\" \r\n                value={processing ? progress : 0} \r\n                sx={{ height: 8, borderRadius: 4 }}\r\n              />\r\n              <ProcessingText variant=\"body2\">\r\n                {processing ? `Progress: ${progress}%` : 'Uploading...'}\r\n              </ProcessingText>\r\n            </Box>\r\n          )}\r\n        </UploadContainer>\r\n\r\n        {resultVideo && (\r\n          <VideoContainer elevation={3}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Processed Video Result\r\n            </Typography>\r\n            <video\r\n              controls\r\n              width=\"100%\"\r\n              src={resultVideo}\r\n              style={{ borderRadius: '8px' }}\r\n            >\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          </VideoContainer>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Account; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}