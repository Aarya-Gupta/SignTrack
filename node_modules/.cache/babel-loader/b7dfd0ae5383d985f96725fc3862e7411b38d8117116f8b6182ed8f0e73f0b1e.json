{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\abdullah\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Account.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Handle file selection\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setError(null);\n    }\n  };\n\n  // Handle file upload and processing\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a video file first');\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      // Create form data\n      const formData = new FormData();\n      formData.append('video', selectedFile);\n\n      // Upload and process the video\n      const response = await fetch('http://localhost:5000/api/process-video', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload and process video');\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to process video');\n      }\n\n      // Set the processed video path\n      setProcessedVideo(`/processed/${data.filename}`);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setUploading(false);\n      setSelectedFile(null);\n      // Clear the file input\n      const fileInput = document.getElementById('video-input');\n      if (fileInput) fileInput.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Processing with YOLOv8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"video-input\",\n          accept: \"video/mp4\",\n          onChange: handleFileSelect,\n          disabled: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !selectedFile || uploading,\n          className: uploading ? 'uploading' : '',\n          children: uploading ? 'Processing...' : 'Upload & Process Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), processedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Processed Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          autoPlay: true,\n          src: processedVideo,\n          children: \"Your browser does not support the video tag.\"\n        }, processedVideo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"iEt9gCgxLvtLX4TXDeghhMuybRU=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Account","_s","selectedFile","setSelectedFile","processedVideo","setProcessedVideo","uploading","setUploading","error","setError","handleFileSelect","event","file","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","success","filename","console","message","fileInput","document","getElementById","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","disabled","onClick","controls","autoPlay","src","_c","$RefreshReg$"],"sources":["C:/code/abdullah/src/pages/Account.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Account.css';\n\nfunction Account() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Handle file selection\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setError(null);\n    }\n  };\n\n  // Handle file upload and processing\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a video file first');\n      return;\n    }\n\n    setUploading(true);\n    setError(null);\n\n    try {\n      // Create form data\n      const formData = new FormData();\n      formData.append('video', selectedFile);\n\n      // Upload and process the video\n      const response = await fetch('http://localhost:5000/api/process-video', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload and process video');\n      }\n\n      const data = await response.json();\n      \n      if (!data.success) {\n        throw new Error(data.error || 'Failed to process video');\n      }\n\n      // Set the processed video path\n      setProcessedVideo(`/processed/${data.filename}`);\n      \n    } catch (error) {\n      console.error('Error:', error);\n      setError(error.message);\n    } finally {\n      setUploading(false);\n      setSelectedFile(null);\n      // Clear the file input\n      const fileInput = document.getElementById('video-input');\n      if (fileInput) fileInput.value = '';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"upload-container\">\n        <h1>Video Processing with YOLOv8</h1>\n        \n        {/* File Selection */}\n        <div className=\"file-input-container\">\n          <input\n            type=\"file\"\n            id=\"video-input\"\n            accept=\"video/mp4\"\n            onChange={handleFileSelect}\n            disabled={uploading}\n          />\n          <button \n            onClick={handleUpload}\n            disabled={!selectedFile || uploading}\n            className={uploading ? 'uploading' : ''}\n          >\n            {uploading ? 'Processing...' : 'Upload & Process Video'}\n          </button>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {/* Video Player */}\n        {processedVideo && (\n          <div className=\"video-container\">\n            <h2>Processed Video</h2>\n            <video\n              controls\n              autoPlay\n              src={processedVideo}\n              key={processedVideo}\n            >\n              Your browser does not support the video tag.\n            </video>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Account; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}