{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\abdullah\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Button, CircularProgress, Paper, LinearProgress } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport { styled } from '@mui/material/styles';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadContainer = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  marginTop: theme.spacing(4),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)'\n}));\n_c = UploadContainer;\nconst VideoContainer = styled(Paper)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  padding: theme.spacing(2),\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  width: '100%',\n  maxWidth: '1600px',\n  margin: '32px auto',\n  '& video': {\n    width: '100%',\n    maxHeight: '70vh',\n    objectFit: 'contain'\n  }\n}));\n_c2 = VideoContainer;\nconst ProcessingText = styled(Typography)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  color: theme.palette.text.secondary\n}));\n\n// VideoPlayer component to display videos from the processed folder\n_c3 = ProcessingText;\nconst VideoPlayer = ({\n  videoFilename\n}) => {\n  // If the videoFilename starts with '/', assume it's a complete path\n  // Otherwise, construct the path to the processed folder on the backend\n  const videoPath = videoFilename !== null && videoFilename !== void 0 && videoFilename.startsWith('/') ? videoFilename : `http://localhost:5000/processed/${videoFilename}`;\n  if (!videoPath) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      autoPlay: true,\n      src: videoPath,\n      // Add key to force re-render when the source changes\n      style: {\n        borderRadius: '8px',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n        width: '100%',\n        maxHeight: '70vh',\n        objectFit: 'contain'\n      },\n      children: \"Your browser does not support the video tag.\"\n    }, videoPath, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c4 = VideoPlayer;\nconst Account = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [resultVideo, setResultVideo] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [processedVideoFilename, setProcessedVideoFilename] = useState(null);\n\n  // Load the latest video when component mounts\n  useEffect(() => {\n    fetchLatestProcessedVideo();\n  }, []);\n  const fetchLatestProcessedVideo = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/latest-video');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          setProcessedVideoFilename(data.filename);\n          // Force resultVideo to also be set to ensure video player updates\n          setResultVideo(null); // Clear first to ensure state change\n          // Use timeout to ensure the state updates in sequence\n          setTimeout(() => {\n            setResultVideo(`http://localhost:5000${data.video_url}`);\n          }, 10);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading latest video:', error);\n    }\n  };\n  useEffect(() => {\n    let progressInterval;\n    if (processing && progress < 100) {\n      progressInterval = setInterval(() => {\n        setProgress(currentProgress => {\n          // Generate random increment between 1 and 20\n          const randomIncrement = Math.floor(Math.random() * 20) + 1;\n          // Calculate new progress\n          const newProgress = Math.min(currentProgress + randomIncrement, 99);\n          // If we're close to 10 seconds (based on interval), allow reaching 100\n          if (currentProgress >= 95) {\n            return 100;\n          }\n          return newProgress;\n        });\n      }, 1000); // Update every second\n\n      // Force completion at exactly 10 seconds\n      const finalTimer = setTimeout(() => {\n        setProgress(100);\n        setResultVideo('/result_out.mp4');\n        // Fetch the latest processed video\n        fetchLatestProcessedVideo();\n        setProcessing(false);\n      }, 10000);\n      return () => {\n        clearInterval(progressInterval);\n        clearTimeout(finalTimer);\n      };\n    }\n  }, [processing]);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setUploading(true);\n    setProgress(0);\n    try {\n      // Create form data\n      const formData = new FormData();\n      formData.append('video', file);\n\n      // Send to backend\n      const response = await fetch('http://localhost:5000/api/process-video', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process video');\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to process video');\n      }\n\n      // Set the video filename from the processed folder\n      setProcessedVideoFilename(data.filename);\n\n      // Set the direct video URL to display immediately\n      setResultVideo(`http://localhost:5000${data.video_url}`);\n\n      // No need for processing animation since we're showing the actual video\n      setUploading(false);\n      setProcessing(false);\n      setProgress(100);\n    } catch (error) {\n      console.error('Error processing video:', error);\n      setUploading(false);\n      setProcessing(false);\n    } finally {\n      event.target.value = '';\n    }\n  };\n  const handleDownload = async () => {\n    if (!processedVideoFilename) return;\n    try {\n      const response = await fetch(`http://localhost:5000/processed/${processedVideoFilename}`);\n      if (!response.ok) {\n        throw new Error('Failed to download video');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = processedVideoFilename;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Error downloading video:', error);\n    }\n  };\n  const getStatusText = () => {\n    if (uploading) return \"Uploading video...\";\n    if (processing) {\n      if (progress < 30) return \"Initializing processing...\";\n      if (progress < 60) return \"Processing video...\";\n      if (progress < 90) return \"Analyzing results...\";\n      return \"Finalizing...\";\n    }\n    return \"Upload Video\";\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        flex: 1,\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          textAlign: \"center\",\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadContainer, {\n          elevation: 3,\n          sx: {\n            maxWidth: '800px',\n            mx: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Upload Video for Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4\",\n            onChange: handleFileUpload,\n            style: {\n              display: 'none'\n            },\n            id: \"video-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"video-upload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: \"span\",\n              variant: \"contained\",\n              size: \"large\",\n              disabled: uploading || processing,\n              startIcon: uploading || processing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 56\n              }, this) : /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 89\n              }, this),\n              sx: {\n                mt: 2\n              },\n              children: getStatusText()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), (uploading || processing) && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: processing ? progress : 0,\n              sx: {\n                height: 8,\n                borderRadius: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProcessingText, {\n              variant: \"body2\",\n              children: processing ? `Progress: ${progress}%` : 'Uploading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), (resultVideo || processedVideoFilename) && /*#__PURE__*/_jsxDEV(VideoContainer, {\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            sx: {\n              textAlign: 'center'\n            },\n            children: \"Processed Video Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            videoFilename: processedVideoFilename || resultVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), processedVideoFilename && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(CloudDownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 32\n              }, this),\n              onClick: handleDownload,\n              children: \"Download Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(Account, \"xNq4wALfKmQkyshRQgjEuMJMBw0=\");\n_c5 = Account;\nexport default Account;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"UploadContainer\");\n$RefreshReg$(_c2, \"VideoContainer\");\n$RefreshReg$(_c3, \"ProcessingText\");\n$RefreshReg$(_c4, \"VideoPlayer\");\n$RefreshReg$(_c5, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Button","CircularProgress","Paper","LinearProgress","CloudUploadIcon","CloudDownloadIcon","styled","Footer","jsxDEV","_jsxDEV","UploadContainer","theme","padding","spacing","textAlign","marginTop","backgroundColor","_c","VideoContainer","width","maxWidth","margin","maxHeight","objectFit","_c2","ProcessingText","color","palette","text","secondary","_c3","VideoPlayer","videoFilename","videoPath","startsWith","sx","display","flexDirection","alignItems","overflow","children","controls","autoPlay","src","style","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c4","Account","_s","uploading","setUploading","processing","setProcessing","resultVideo","setResultVideo","progress","setProgress","processedVideoFilename","setProcessedVideoFilename","fetchLatestProcessedVideo","response","fetch","ok","data","json","success","filename","setTimeout","video_url","error","console","progressInterval","setInterval","currentProgress","randomIncrement","Math","floor","random","newProgress","min","finalTimer","clearInterval","clearTimeout","handleFileUpload","event","_event$target$files","file","target","files","formData","FormData","append","method","body","Error","value","handleDownload","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","getStatusText","minHeight","flex","py","variant","component","gutterBottom","elevation","mx","type","accept","onChange","id","htmlFor","size","disabled","startIcon","mt","height","onClick","_c5","$RefreshReg$"],"sources":["C:/code/abdullah/src/pages/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Paper,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\nimport { styled } from '@mui/material/styles';\r\nimport Footer from '../components/Footer';\r\n\r\nconst UploadContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  marginTop: theme.spacing(4),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n}));\r\n\r\nconst VideoContainer = styled(Paper)(({ theme }) => ({\r\n  marginTop: theme.spacing(4),\r\n  padding: theme.spacing(2),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n  width: '100%',\r\n  maxWidth: '1600px',\r\n  margin: '32px auto',\r\n  '& video': {\r\n    width: '100%',\r\n    maxHeight: '70vh',\r\n    objectFit: 'contain',\r\n  }\r\n}));\r\n\r\nconst ProcessingText = styled(Typography)(({ theme }) => ({\r\n  marginTop: theme.spacing(2),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// VideoPlayer component to display videos from the processed folder\r\nconst VideoPlayer = ({ videoFilename }) => {\r\n  // If the videoFilename starts with '/', assume it's a complete path\r\n  // Otherwise, construct the path to the processed folder on the backend\r\n  const videoPath = videoFilename?.startsWith('/') \r\n    ? videoFilename \r\n    : `http://localhost:5000/processed/${videoFilename}`;\r\n\r\n  if (!videoPath) return null;\r\n\r\n  return (\r\n    <Box sx={{ \r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <video\r\n        controls\r\n        autoPlay\r\n        src={videoPath}\r\n        key={videoPath} // Add key to force re-render when the source changes\r\n        style={{ \r\n          borderRadius: '8px',\r\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\r\n          width: '100%',\r\n          maxHeight: '70vh',\r\n          objectFit: 'contain'\r\n        }}\r\n      >\r\n        Your browser does not support the video tag.\r\n      </video>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Account = () => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [resultVideo, setResultVideo] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processedVideoFilename, setProcessedVideoFilename] = useState(null);\r\n\r\n  // Load the latest video when component mounts\r\n  useEffect(() => {\r\n    fetchLatestProcessedVideo();\r\n  }, []);\r\n\r\n  const fetchLatestProcessedVideo = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/latest-video');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setProcessedVideoFilename(data.filename);\r\n          // Force resultVideo to also be set to ensure video player updates\r\n          setResultVideo(null); // Clear first to ensure state change\r\n          // Use timeout to ensure the state updates in sequence\r\n          setTimeout(() => {\r\n            setResultVideo(`http://localhost:5000${data.video_url}`);\r\n          }, 10);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading latest video:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let progressInterval;\r\n    if (processing && progress < 100) {\r\n      progressInterval = setInterval(() => {\r\n        setProgress(currentProgress => {\r\n          // Generate random increment between 1 and 20\r\n          const randomIncrement = Math.floor(Math.random() * 20) + 1;\r\n          // Calculate new progress\r\n          const newProgress = Math.min(currentProgress + randomIncrement, 99);\r\n          // If we're close to 10 seconds (based on interval), allow reaching 100\r\n          if (currentProgress >= 95) {\r\n            return 100;\r\n          }\r\n          return newProgress;\r\n        });\r\n      }, 1000); // Update every second\r\n\r\n      // Force completion at exactly 10 seconds\r\n      const finalTimer = setTimeout(() => {\r\n        setProgress(100);\r\n        setResultVideo('/result_out.mp4');\r\n        // Fetch the latest processed video\r\n        fetchLatestProcessedVideo();\r\n        setProcessing(false);\r\n      }, 10000);\r\n\r\n      return () => {\r\n        clearInterval(progressInterval);\r\n        clearTimeout(finalTimer);\r\n      };\r\n    }\r\n  }, [processing]);\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    setProgress(0);\r\n    \r\n    try {\r\n      // Create form data\r\n      const formData = new FormData();\r\n      formData.append('video', file);\r\n\r\n      // Send to backend\r\n      const response = await fetch('http://localhost:5000/api/process-video', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process video');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.error || 'Failed to process video');\r\n      }\r\n\r\n      // Set the video filename from the processed folder\r\n      setProcessedVideoFilename(data.filename);\r\n      \r\n      // Set the direct video URL to display immediately\r\n      setResultVideo(`http://localhost:5000${data.video_url}`);\r\n      \r\n      // No need for processing animation since we're showing the actual video\r\n      setUploading(false);\r\n      setProcessing(false);\r\n      setProgress(100);\r\n      \r\n    } catch (error) {\r\n      console.error('Error processing video:', error);\r\n      setUploading(false);\r\n      setProcessing(false);\r\n    } finally {\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!processedVideoFilename) return;\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/processed/${processedVideoFilename}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to download video');\r\n      }\r\n      \r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = processedVideoFilename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error downloading video:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (uploading) return \"Uploading video...\";\r\n    if (processing) {\r\n      if (progress < 30) return \"Initializing processing...\";\r\n      if (progress < 60) return \"Processing video...\";\r\n      if (progress < 90) return \"Analyzing results...\";\r\n      return \"Finalizing...\";\r\n    }\r\n    return \"Upload Video\";\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    }}>\r\n      <Container maxWidth=\"lg\" sx={{ flex: 1, py: 4 }}>\r\n        <Box sx={{ py: 8 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom textAlign=\"center\">\r\n            My Account\r\n          </Typography>\r\n\r\n          <UploadContainer elevation={3} sx={{ maxWidth: '800px', mx: 'auto' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Upload Video for Processing\r\n            </Typography>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"video/mp4\"\r\n              onChange={handleFileUpload}\r\n              style={{ display: 'none' }}\r\n              id=\"video-upload\"\r\n            />\r\n            <label htmlFor=\"video-upload\">\r\n              <Button\r\n                component=\"span\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                disabled={uploading || processing}\r\n                startIcon={(uploading || processing) ? <CircularProgress size={20} /> : <CloudUploadIcon />}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {getStatusText()}\r\n              </Button>\r\n            </label>\r\n            \r\n            {(uploading || processing) && (\r\n              <Box sx={{ width: '100%', mt: 3 }}>\r\n                <LinearProgress \r\n                  variant=\"determinate\" \r\n                  value={processing ? progress : 0} \r\n                  sx={{ height: 8, borderRadius: 4 }}\r\n                />\r\n                <ProcessingText variant=\"body2\">\r\n                  {processing ? `Progress: ${progress}%` : 'Uploading...'}\r\n                </ProcessingText>\r\n              </Box>\r\n            )}\r\n          </UploadContainer>\r\n\r\n          {(resultVideo || processedVideoFilename) && (\r\n            <VideoContainer elevation={3}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ textAlign: 'center' }}>\r\n                Processed Video Result\r\n              </Typography>\r\n              {/* Use the VideoPlayer component to display the video */}\r\n              <VideoPlayer videoFilename={processedVideoFilename || resultVideo} />\r\n              \r\n              {processedVideoFilename && (\r\n                <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<CloudDownloadIcon />}\r\n                    onClick={handleDownload}\r\n                  >\r\n                    Download Video\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </VideoContainer>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n      <Footer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Account; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}